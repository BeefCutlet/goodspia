name: ci/cd
on:
  pull_request:
    branches:
      - master

env:
  S3_BUCKET_NAME: goodspia-api
  APP_NAME: goodspia
  RESOURCE_PATH: ./src/main/resources/application-prod.yml
  CODE_DEPLOY_APPLICATION_NAME: goodspia-deploy
  CODE_DEPLOY_DEPLOYMENT_GROUP_NAME: GoodsPiaDeployGroup

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
        
        # [1] yml 변수값 세팅
      - name: Set Yml
        uses: microsoft/variable-substitution@v1
        with:
          files: ${{ env.RESOURCE_PATH }}
        env:
          spring.datasource.url: ${{ secrets.RDS_URL }}
          spring.datasource.username: ${{ secrets.RDS_USERNAME }}
          spring.datasource.password: ${{ secrets.RDS_PASSWORD }}
          iamport.rest-api.key: ${{ secrets.IAMPORT_KEY }}
          iamport.rest-api.secret-key: ${{ secrets.IAMPORT_SECRET_KEY }}
          iamport.rest-api.imp-uid: ${{ secrets.IAMPORT_IMP_UID }}
          jwt.secret-key: ${{ secrets.JWT_SECRET_KEY }}
          spring.redis.host: ${{ secrets.REDIS_HOST }}
          spring.redis.port: ${{ secrets.REDIS_PORT }}

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

        # [2] 빌드
      - name: Build with Gradle
        run: ./gradlew clean build
        shell: bash

        # [3] ZIP 파일 생성
      - name: Make zip file
        run: zip -r ./$APP_NAME.zip .
        shell: bash

        # [4] Access Key 설정
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
          aws-region: ${{ secrets.AWS_REGION }} 

        # [5] S3에 업로드
      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 ./$APP_NAME.zip s3://$S3_BUCKET_NAME/$APP_NAME.zip

        # [6] 코드 배포
      - name: Code Deploy
        run: aws deploy create-deployment
          --application-name ${{ env.CODE_DEPLOY_APPLICATION_NAME }}
          --deployment-config-name CodeDeployDefault.OneAtATime
          --deployment-group-name ${{ env.CODE_DEPLOY_DEPLOYMENT_GROUP_NAME }}
          --s3-location bucket=$S3_BUCKET_NAME,bundleType=zip,key=$APP_NAME.zip
